/* задание:
Создать абстрактный базовый класс Pair с виртуальными арифметическими операциями.
Создать производные классы FuzzyNumber (см. лаб. 1, задание 2)
-------------
Нечеткое число описывается тройкой действительных чисел
(X – e1 , X, X + e2), где x – среднее значение числа,
X – e1 – минимально допустимое значение,
X + e2 – максимально допустимое значение Реализовать класс для работы с нечеткими числами.
Операции над числами A = (A – a1, A, A + a2) и B = (B – b1, B, B + b2) выполняются по следующим правилам:
· сложение: A + B = (A + B – a1 – b1, A + B, A + B + a2 + b2)
· вычитание: A – B = (A – B – a1 – b1, A – B, A – B + a2 + b2)
· умножение: A * B = (A*B – B*a1 – A*b1 + a1*b1, A*B, A*B + B*a1 + A*b1 + a1*b1)
· деление: A / B = ((A – a1) /(B + b1), A/B, (A + a1) / (B – b1)
· обратное число: 1 / B = (1 /(B + b1), 1/B, 1 / (B – b1)
-------------
Complex (см. лаб. 1, задание 1).
-------------
Комплексное число представляется парой действительных чисел (a, b), где a – действительная часть,
b – мнимая часть. Реализовать класс для работы с комплексными числами.
Обязательно должны присутсвовать операции:
· сложение: (a,b) + (c,d) = (a + b, c + d)
· вычитание: (a,b) – (c,d) = (a – b, c – d)
· умножение: (a,b) * (c,d) = (aс – bd, ad + bc)
· деление: (a,b) / (c,d) = (aс + bd, ad – bc) / (cc + dd)
· сравнение: (a,b) == (c,d) если (a == с) и (d == b)
· сопряженное число: conj(a,b) = (a, - b)
-------------*/
#include "pair.h"
#include "complex.h"
#include "fuzzynumber.h"
using namespace std;

int main(int argc, char *argv[]){
    setlocale(LC_ALL,"rus");
    return 0;
}
